// @generated by protoc-gen-es v1.0.0 with parameter "target=ts"
// @generated from file status-update.proto (syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";

/**
 * Specs:
 * :AUTOMATIC
 * To Send - "AUTOMATIC" status ping every 5 minutes
 * Display - Online for up to 5 minutes from the last clock, after that Offline
 * :ALWAYS_ONLINE
 * To Send - "ALWAYS_ONLINE" status ping every 5 minutes
 * Display - Online for up to 2 weeks from the last clock, after that Offline
 * :INACTIVE
 * To Send - A single "INACTIVE" status ping
 * Display - Offline forever
 * Note: Only send pings if the user interacted with the app in the last x minutes. 
 *
 * @generated from message StatusUpdate
 */
export class StatusUpdate extends Message<StatusUpdate> {
  /**
   * @generated from field: uint64 clock = 1;
   */
  clock = protoInt64.zero;

  /**
   * @generated from field: StatusUpdate.StatusType status_type = 2;
   */
  statusType = StatusUpdate_StatusType.UNKNOWN_STATUS_TYPE;

  /**
   * @generated from field: string custom_text = 3;
   */
  customText = "";

  constructor(data?: PartialMessage<StatusUpdate>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "StatusUpdate";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "clock", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "status_type", kind: "enum", T: proto3.getEnumType(StatusUpdate_StatusType) },
    { no: 3, name: "custom_text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StatusUpdate {
    return new StatusUpdate().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StatusUpdate {
    return new StatusUpdate().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StatusUpdate {
    return new StatusUpdate().fromJsonString(jsonString, options);
  }

  static equals(a: StatusUpdate | PlainMessage<StatusUpdate> | undefined, b: StatusUpdate | PlainMessage<StatusUpdate> | undefined): boolean {
    return proto3.util.equals(StatusUpdate, a, b);
  }
}

/**
 * @generated from enum StatusUpdate.StatusType
 */
export enum StatusUpdate_StatusType {
  /**
   * @generated from enum value: UNKNOWN_STATUS_TYPE = 0;
   */
  UNKNOWN_STATUS_TYPE = 0,

  /**
   * @generated from enum value: AUTOMATIC = 1;
   */
  AUTOMATIC = 1,

  /**
   * @generated from enum value: DO_NOT_DISTURB = 2;
   */
  DO_NOT_DISTURB = 2,

  /**
   * @generated from enum value: ALWAYS_ONLINE = 3;
   */
  ALWAYS_ONLINE = 3,

  /**
   * @generated from enum value: INACTIVE = 4;
   */
  INACTIVE = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(StatusUpdate_StatusType)
proto3.util.setEnumType(StatusUpdate_StatusType, "StatusUpdate.StatusType", [
  { no: 0, name: "UNKNOWN_STATUS_TYPE" },
  { no: 1, name: "AUTOMATIC" },
  { no: 2, name: "DO_NOT_DISTURB" },
  { no: 3, name: "ALWAYS_ONLINE" },
  { no: 4, name: "INACTIVE" },
]);

