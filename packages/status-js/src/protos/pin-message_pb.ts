// @generated by protoc-gen-es v1.0.0 with parameter "target=ts"
// @generated from file pin-message.proto (syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { MessageType } from "./enums_pb.js";

/**
 * @generated from message PinMessage
 */
export class PinMessage extends Message<PinMessage> {
  /**
   * @generated from field: uint64 clock = 1;
   */
  clock = protoInt64.zero;

  /**
   * @generated from field: string message_id = 2;
   */
  messageId = "";

  /**
   * @generated from field: string chat_id = 3;
   */
  chatId = "";

  /**
   * @generated from field: bool pinned = 4;
   */
  pinned = false;

  /**
   * The type of message (public/one-to-one/private-group-chat)
   *
   * @generated from field: MessageType message_type = 5;
   */
  messageType = MessageType.UNKNOWN_MESSAGE_TYPE;

  constructor(data?: PartialMessage<PinMessage>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "PinMessage";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "clock", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "message_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "chat_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "pinned", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "message_type", kind: "enum", T: proto3.getEnumType(MessageType) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PinMessage {
    return new PinMessage().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PinMessage {
    return new PinMessage().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PinMessage {
    return new PinMessage().fromJsonString(jsonString, options);
  }

  static equals(a: PinMessage | PlainMessage<PinMessage> | undefined, b: PinMessage | PlainMessage<PinMessage> | undefined): boolean {
    return proto3.util.equals(PinMessage, a, b);
  }
}

